/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rappsilber.xilauncher.config;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author Lutz Fischer <lfischer@staffmail.ed.ac.uk>
 */
public class ConfigGUI extends javax.swing.JFrame {
    Config config;
    ArrayList<QueueGUI> queues = new ArrayList<>();
    
    /**
     * Creates new form GuiConfig
     */
    public ConfigGUI() {
        initComponents();
    }

    /**
     * Creates new form GuiConfig
     */
    public ConfigGUI(Config conf) {
        this();
        setConfig(conf);
    }
    
    public void setConfig(Config conf) {
        this.config = conf;
        conf.gui = this;
        this.ckPause.setSelected(config.paused.get());
        
        for (Config.Queue q : config.queues)
            addQueue(q);
    }
    
    public void addQueue(Config.Queue q) {
        final QueueGUI qg = new QueueGUI(q);
        this.queues.add(qg);
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                ConfigGUI.this.pQueues.add(qg);
            }
        });
    }
    
    public void removeQueue(final Config.Queue q) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                QueueGUI rem = null;
                for (QueueGUI eq : ConfigGUI.this.queues) {
                    if (eq.queue == q) {
                        rem = eq;
                    }
                }
                ConfigGUI.this.pQueues.remove(rem);
                ConfigGUI.this.queues.remove(rem);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ckPause = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        pQueues = new javax.swing.JPanel();
        btnReRead = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ckPause.setText("Don't pick up new searches");
        ckPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckPauseActionPerformed(evt);
            }
        });

        pQueues.setLayout(new javax.swing.BoxLayout(pQueues, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(pQueues);

        btnReRead.setText("ReRead");
        btnReRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReReadActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ckPause)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(btnReRead))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnStop)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckPause)
                    .addComponent(btnReRead))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStop))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReReadActionPerformed
        try {
            config.reReadConfig();
        } catch (IOException ex) {
            Logger.getLogger(ConfigGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReReadActionPerformed

    private void ckPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckPauseActionPerformed
        config.paused.set(ckPause.isSelected());
    }//GEN-LAST:event_ckPauseActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        btnStop.setEnabled(false);
        config.setStop();
    }//GEN-LAST:event_btnStopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        startGui(null);
    }

    public static void startGui(final Config conf) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConfigGUI cg = new ConfigGUI();
                if (conf != null)
                    cg.setConfig(conf);
                cg.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReRead;
    private javax.swing.JButton btnStop;
    private javax.swing.JCheckBox ckPause;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pQueues;
    // End of variables declaration//GEN-END:variables

    void upadateFromConfig() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConfigGUI.this.ckPause.setSelected(ConfigGUI.this.config.paused.get());
                //ConfigGUI.this.ckStop.setSelected(ConfigGUI.this.config.stop);
            }
        });
    }
}
