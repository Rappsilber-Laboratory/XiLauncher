/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rappsilber.xilauncher.config;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.SwingUtilities;
import rappsilber.xilauncher.processes.ProcessLauncher;

/**
 *
 * @author Lutz Fischer <lfischer@staffmail.ed.ac.uk>
 */
public class QueueGUI extends javax.swing.JPanel {

    Config.Queue queue;
    
    class SizeUnit {
        int size;
        int humanSize;
        String unit;

        public SizeUnit(int size) {
            this.size = size;
            Double kb = size /1024.0;
            Double mb = kb /1024.0;
            if (mb == mb.intValue()) {
                this.unit = "MB";
                humanSize = mb.intValue();
            } else if (kb == kb.intValue()) {
                this.unit = "KB";
                humanSize = kb.intValue();
            } else {
                this.unit = "B";
                humanSize = size;
            }
        }
        
    }
    /**
     * Creates new form QueueGui
     */
    public QueueGUI() {
        initComponents();
        showDetails();
    }

    public QueueGUI(Config.Queue queue) {
        this();        
        setQueue(queue);
    }

    public void setQueue(Config.Queue queue) {
        this.queue = queue;
        queue.gui = this;
        setBorder(javax.swing.BorderFactory.createTitledBorder(queue.name));
        updateFromQueue();
        queue.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if (QueueGUI.this.queue.getSearching() != null) {
                    txtName.setText(QueueGUI.this.queue.getSearching());
                    btnAbort.setEnabled(true);
                } else {
                    txtName.setText("IDLE");
                    btnAbort.setEnabled(false);
                }
                    
            }
            
        });
        setBorder(javax.swing.BorderFactory.createTitledBorder("queue_name"));        
    }
    
    public void updateFromQueue() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                synchronized (queue) {
                    QueueGUI.this.setBorder(javax.swing.BorderFactory.createTitledBorder(queue.name));
                    SizeUnit maxFasta = new SizeUnit(queue.maxFastaSize);
                    QueueGUI.this.spMaxFASTASize.setValue(maxFasta.humanSize);
                    QueueGUI.this.cbFASTAUnit.setSelectedItem(maxFasta.unit);
                    SizeUnit maxPeakList = new SizeUnit(queue.maxPeakList);
                    QueueGUI.this.spMaxPeakList.setValue(maxPeakList.humanSize);
                    QueueGUI.this.cbMaxPeakListUnit.setSelectedItem(maxPeakList.unit);
                    SizeUnit prioPeakList = new SizeUnit(queue.prioritisedMaxPeakList);
                    QueueGUI.this.spPrioPeakList.setValue(prioPeakList.humanSize);
                    QueueGUI.this.cbPrioPeakListUnit.setSelectedItem(prioPeakList.unit);
                    QueueGUI.this.txtPrioUser.setText(queue.prioUser);
                    QueueGUI.this.txtDePrioUser.setText(queue.lowPrioUser);
                    QueueGUI.this.txtExcludeUser.setText(queue.excludedUser);
                    QueueGUI.this.ckEnabled.setSelected(queue.enabled);
                }
            }
        });
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        ckEnabled = new javax.swing.JCheckBox();
        ckShowDetails = new javax.swing.JCheckBox();
        pdetails = new javax.swing.JPanel();
        lblPrioUser = new javax.swing.JLabel();
        lbldePrioUser = new javax.swing.JLabel();
        txtDePrioUser = new javax.swing.JTextField();
        txtExcludeUser = new javax.swing.JTextField();
        lblExcludeUser = new javax.swing.JLabel();
        lblmaxPeakList = new javax.swing.JLabel();
        spMaxPeakList = new javax.swing.JSpinner();
        cbMaxPeakListUnit = new javax.swing.JComboBox<>();
        lblPrioPeakList = new javax.swing.JLabel();
        lblMaxFASTASize = new javax.swing.JLabel();
        cbFASTAUnit = new javax.swing.JComboBox<>();
        spMaxFASTASize = new javax.swing.JSpinner();
        spPrioPeakList = new javax.swing.JSpinner();
        txtPrioUser = new javax.swing.JTextField();
        cbPrioPeakListUnit = new javax.swing.JComboBox<>();
        btnApply = new javax.swing.JButton();
        btnAbort = new javax.swing.JButton();

        lblName.setText("Search");

        txtName.setText("Idle");

        ckEnabled.setText("Enabled");
        ckEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckEnabledActionPerformed(evt);
            }
        });

        ckShowDetails.setText("Details");
        ckShowDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckShowDetailsActionPerformed(evt);
            }
        });

        lblPrioUser.setText("Prioritised Users");

        lbldePrioUser.setText("De-prioritised Users");

        lblExcludeUser.setText("excluded Users");

        lblmaxPeakList.setText("peak list <");

        spMaxPeakList.setModel(new javax.swing.SpinnerNumberModel());

        cbMaxPeakListUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B", "KB", "MB" }));
        cbMaxPeakListUnit.setSelectedIndex(1);

        lblPrioPeakList.setText("prioritise peak list <");

        lblMaxFASTASize.setText("max FASTA");

        cbFASTAUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B", "KB", "MB" }));
        cbFASTAUnit.setSelectedIndex(1);

        spMaxFASTASize.setModel(new javax.swing.SpinnerNumberModel());

        spPrioPeakList.setModel(new javax.swing.SpinnerNumberModel());

        cbPrioPeakListUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "B", "KB", "MB" }));
        cbPrioPeakListUnit.setSelectedIndex(1);

        btnApply.setText("Apply");
        btnApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyActionPerformed(evt);
            }
        });

        btnAbort.setText("Stop");
        btnAbort.setEnabled(false);
        btnAbort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pdetailsLayout = new javax.swing.GroupLayout(pdetails);
        pdetails.setLayout(pdetailsLayout);
        pdetailsLayout.setHorizontalGroup(
            pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pdetailsLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pdetailsLayout.createSequentialGroup()
                        .addComponent(btnAbort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnApply))
                    .addGroup(pdetailsLayout.createSequentialGroup()
                        .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaxFASTASize)
                            .addComponent(lblPrioUser)
                            .addComponent(lbldePrioUser)
                            .addComponent(lblExcludeUser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pdetailsLayout.createSequentialGroup()
                                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spMaxFASTASize)
                                    .addComponent(spPrioPeakList, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spMaxPeakList))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbFASTAUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbMaxPeakListUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbPrioPeakListUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtPrioUser)
                            .addComponent(txtDePrioUser)
                            .addComponent(txtExcludeUser)))
                    .addGroup(pdetailsLayout.createSequentialGroup()
                        .addComponent(lblmaxPeakList)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pdetailsLayout.createSequentialGroup()
                        .addComponent(lblPrioPeakList)
                        .addGap(125, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pdetailsLayout.setVerticalGroup(
            pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pdetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxFASTASize)
                    .addComponent(cbFASTAUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spMaxFASTASize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmaxPeakList)
                    .addComponent(cbMaxPeakListUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spMaxPeakList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrioPeakList)
                    .addComponent(cbPrioPeakListUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spPrioPeakList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrioUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrioUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDePrioUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbldePrioUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExcludeUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExcludeUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApply)
                    .addComponent(btnAbort))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckEnabled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckShowDetails)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckEnabled)
                    .addComponent(ckShowDetails))
                .addGap(0, 0, 0)
                .addComponent(pdetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ckShowDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckShowDetailsActionPerformed
        showDetails();
    }//GEN-LAST:event_ckShowDetailsActionPerformed

    private void btnApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyActionPerformed
        synchronized (queue) {
            queue.enabled = ckEnabled.isSelected();
            queue.excludedUser = txtExcludeUser.getText();
            queue.prioUser = txtPrioUser.getText();
            queue.lowPrioUser = txtDePrioUser.getText();
            queue.maxFastaSize =  getByteSize((Integer) spMaxFASTASize.getValue(), cbFASTAUnit.getSelectedItem().toString());
            queue.maxPeakList =  getByteSize((Integer) spMaxPeakList.getValue(), cbMaxPeakListUnit.getSelectedItem().toString());
            queue.prioritisedMaxPeakList =  getByteSize((Integer) spPrioPeakList.getValue(), cbPrioPeakListUnit.getSelectedItem().toString());
        }
    }//GEN-LAST:event_btnApplyActionPerformed

    
    public int getByteSize(int size, String unit){
        if (unit.contentEquals("MB"))
            size = size*1024*1024;
        if (unit.contentEquals("KB"))
            size = size*1024;       
        return size;
    }
    
    private void ckEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckEnabledActionPerformed
        synchronized (queue) {
            queue.enabled = ckEnabled.isSelected();
        }
    }//GEN-LAST:event_ckEnabledActionPerformed

    private void btnAbortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbortActionPerformed
        ProcessLauncher pl;
        synchronized (queue) {
            pl = queue.getLauncher();
        }
        if (pl != null)
            pl.abort();
        
    }//GEN-LAST:event_btnAbortActionPerformed

    public void showDetails() {
        pdetails.setVisible(ckShowDetails.isSelected());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbort;
    private javax.swing.JButton btnApply;
    private javax.swing.JComboBox<String> cbFASTAUnit;
    private javax.swing.JComboBox<String> cbMaxPeakListUnit;
    private javax.swing.JComboBox<String> cbPrioPeakListUnit;
    private javax.swing.JCheckBox ckEnabled;
    private javax.swing.JCheckBox ckShowDetails;
    private javax.swing.JLabel lblExcludeUser;
    private javax.swing.JLabel lblMaxFASTASize;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrioPeakList;
    private javax.swing.JLabel lblPrioUser;
    private javax.swing.JLabel lbldePrioUser;
    private javax.swing.JLabel lblmaxPeakList;
    private javax.swing.JPanel pdetails;
    private javax.swing.JSpinner spMaxFASTASize;
    private javax.swing.JSpinner spMaxPeakList;
    private javax.swing.JSpinner spPrioPeakList;
    private javax.swing.JTextField txtDePrioUser;
    private javax.swing.JTextField txtExcludeUser;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrioUser;
    // End of variables declaration//GEN-END:variables
}
